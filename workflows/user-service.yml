name: User Service CI/CD

on:
  push:
    branches: [ main, master ]
    paths:
      - 'user-service/**'
      - '.github/workflows/user-service.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'user-service/**'
      - '.github/workflows/user-service.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          cd user-service
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      - name: Run tests with pytest
        run: |
          cd user-service
          pytest --cov=app tests/ --cov-report=xml --cov-report=term-missing --cov-fail-under=80
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./user-service/coverage.xml
          flags: user-service
          fail_ci_if_error: true
  
  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./user-service
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/health-tracker-user-service:latest,${{ secrets.DOCKERHUB_USERNAME }}/health-tracker-user-service:${{ github.sha }}
  
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
      - name: Deploy to Digital Ocean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DIGITALOCEAN_HOST }}
          username: ${{ secrets.DIGITALOCEAN_USERNAME }}
          key: ${{ secrets.DIGITALOCEAN_PRIVATE_KEY }}
          script: |
            cd /app
            # Pull the latest image
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/health-tracker-user-service:latest
            
            # Stop and remove the current container if it exists
            docker stop hmt-user-service || true
            docker rm hmt-user-service || true
            
            # Run the new container
            docker run -d \
              --name hmt-user-service \
              --restart always \
              --network hmt-network \
              -p 8000:8000 \
              -e MONGO_URI="mongodb+srv://tm3995:${{ secrets.DB_PASSWORD }}@healthtracker.vc6hwcx.mongodb.net/?retryWrites=true&w=majority&appName=HealthTracker" \
              -e JWT_SECRET="${{ secrets.JWT_SECRET }}" \
              -e API_KEY="${{ secrets.API_KEY }}" \
              -e NODE_ENV=production \
              ${{ secrets.DOCKERHUB_USERNAME }}/health-tracker-user-service:latest
            
            # Verify the container is running
            docker ps | grep hmt-user-service
